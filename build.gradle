apply plugin: 'application'
apply plugin: 'osgi'
apply plugin: 'war'

sourceCompatibility = '1.6'
version = '0.1'


repositories {
	maven {
        url "http://repo.dotcms.com/artifactory/libs-release"
    }
}

dependencies {
	compile (group: 'com.dotcms', name: 'dotcms', version: '2.5.1'){
		transitive = true
	}
	providedCompile "javax.servlet:servlet-api:2.5"
}

jar {
    manifest {
        name = 'peopleman'
        instruction 'Bundle-Vendor', 'dotcms'
        instruction 'Bundle-Description', 'Peopleman Example OSGi Example for dotcms '
        instruction 'Bundle-DocURL', 'http://www.dotcms.com'
        instruction 'Bundle-Activator', 'com.dotcms.peopleman.viewtools.Activator'
    }
}

task removeVersionsOnManifest << {
	def manifest1=new java.util.jar.Manifest(new FileInputStream('build/tmp/jar/MANIFEST.MF'))
	def imports = manifest1.getMainAttributes().find { it.key.toString()=="Import-Package" }
	imports.value=imports.toString().replaceAll(~/;version="[\(\[][0-9\.]+,[0-9\.]+[\)\]]"/,'')
	manifest1.write(new FileOutputStream("build/tmp/jar/MANIFEST1.MF"))
}

task renameOrignalManifest (type: Copy) {
	from('build/tmp/jar/')
    into('build/tmp/jar/')
	rename ('MANIFEST.MF', 'MANIFEST_ORIGINAL.MF')
}

task renameNewManifest (type: Copy) {
	from('build/tmp/jar/')
    into('build/tmp/jar/')
	rename ('MANIFEST1.MF', 'MANIFEST.MF')
}

task cleanUp (type: Delete){
	delete 'build/tmp/jar/MANIFEST1.MF'
}

task osgijar(type: Jar, dependsOn: ['jar', 'removeVersionsOnManifest' ,'renameOrignalManifest', 'renameNewManifest', 'cleanUp'] ) { 
    appendix = "generatedjar" 
    from zipTree(jar.archivePath) // add original content 
    manifest {
    	from('build/tmp/jar/MANIFEST.MF')
    } 
} 

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}